name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      release-type:
        type: choice
        description: A new version is published with the corresponding version bump if not set to None.
        options:
          - 'None'
          - 'Pre-release'
          - 'Patch'
          - 'Minor'
          - 'Major'
        default: 'None'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-and-verify:
    name: Build and verify
    uses: arm-debug/vscode-workflows/.github/workflows/build-and-verify.yml@v3.1.1
    secrets:
      EXTENSIONS_REPO_ACCESS_APP_ID: ${{secrets.EXTENSIONS_REPO_ACCESS_APP_ID}}
      EXTENSIONS_REPO_ACCESS_PRIVATE_KEY: ${{secrets.EXTENSIONS_REPO_ACCESS_PRIVATE_KEY}}
      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
      ARM_ARTIFACTORY_PASSWORD: ${{secrets.ARM_ARTIFACTORY_PASSWORD}}
      CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
    with:
      package-manager: 'npm'
      enable-code-climate: true
      enable-ksc-next-preview: false
      test-on-self-hosted-ubuntu-only: false
      release-type: ${{ inputs.release-type }}
  release-and-publish:
    name: Release and publish
    needs: build-and-verify
    uses: arm-debug/vscode-workflows/.github/workflows/release-and-publish.yml@v3.1.1
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.release-type != 'None' && github.ref == 'refs/heads/main' }}
    with:
      api-types-registry-url: 'https://registry.npmjs.org'
      release-type: ${{inputs.release-type}}
      open-source: true
    secrets:
      OPEN_VSX_TOKEN: ${{secrets.OPEN_VSX_TOKEN}}
      VS_MARKETPLACE_TOKEN: ${{secrets.VS_MARKETPLACE_TOKEN}}
      NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      EXTENSIONS_REPO_ACCESS_PRIVATE_KEY: ${{secrets.EXTENSIONS_REPO_ACCESS_PRIVATE_KEY}}
      EXTENSIONS_REPO_ACCESS_APP_ID: ${{secrets.EXTENSIONS_REPO_ACCESS_APP_ID}}
      ARM_SOFTWARE_TOKEN: ${{secrets.ARM_SOFTWARE_TOKEN}}
  check-copyright:
    name: Check Copyright Headers
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/google/addlicense:v1.1.1
    steps:
      - uses: actions/checkout@v2
      - run: docker pull $IMAGE_NAME
      - run: docker run -v ${PWD}:/src $IMAGE_NAME -c "Arm Limited" -check src tests *.ts *.js
